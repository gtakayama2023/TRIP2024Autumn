#!/bin/bash
# Content-Type ヘッダーを出力 (SSE用)
echo "Content-Type: text/event-stream"
echo "Cache-Control: no-cache"
echo "Connection: keep-alive"
echo

# ヘルパー関数: SSEフォーマットでメッセージを送信
send_message() {
    echo "$1"
    # バッファをフラッシュして即時送信
    if [ -n "${STDOUT_ISATTY:-}" ]; then
        flush
    fi
}

# ヘルパー関数: エラーメッセージを送信
send_error() {
    echo "data: $1"
    echo
}

# URLからrunNoとrunNameを取得
parse_query_string() {
    local query_string="$1"
    send_message "Parsing query string: $query_string"
    runNo=$(echo "$query_string" | sed -n 's/.*runNo=\([^&]*\).*/\1/p')
    IntRunNo=$((10#$runNo))
    runName=$(echo "$query_string" | sed -n 's/.*runName=\([^&]*\).*/\1/p' | sed 's/+/ /g;s/%/\\x/g' | xargs -0 echo -e)
    loadEvts=$(echo "$query_string" | sed -n 's/.*loadEvts=\([^&]*\).*/\1/p')
    send_message "Extracted runNo: $runNo"
    send_message "Extracted runName: $runName"
    send_message "Extracted loadEvts: $loadEvts"
}

# リモートファイルのパスを構築
construct_remote_path() {
    if [ -z "$runNo" ] || [ -z "$runName" ]; then
        send_error "runNo or runName is empty"
        exit 1
    fi
    echo "iRIBF_trip_ana:/home/trip/S3CAN/2024/AUTUMN/users/default/HIST/${runName}${runNo}.root"
}

# ROOTマクロの実行結果を処理する関数
execute_root_macro() {
    local temp_file=$(mktemp)
    send_message "Starting ROOT macro execution..."
    
    # リモートでROOTマクロを実行し、結果を一時ファイルに保存
    ssh iRIBF_trip_ana "cd /home/trip/S3CAN/2024/AUTUMN/users/default && root -l -b -q './ANA/ridf2root.cpp++g(${IntRunNo}, \"${runName}\", 0, ${loadEvts})'" > "$temp_file" 2>&1

    # 実行結果を1行ずつ読み取ってブラウザに送信
    while IFS= read -r line; do
        # ROOTの起動メッセージをフィルタリング
        if [[ ! $line =~ ^root|^Processing|^Starting|^Macro|^Info|^\*+$ ]]; then
            send_message "$line"
        fi
    done < "$temp_file"

    rm -f "$temp_file"
    send_message "ROOT macro execution completed."
}

# メイン処理
main() {
    # 環境変数からクエリ文字列を取得
    query_string="${QUERY_STRING}"
    send_message "Received query string: $query_string"

    # パラメータを解析
    parse_query_string "$query_string"

    # ROOTマクロを実行
    execute_root_macro

    # リモートファイルパスの取得
    remote_path=$(construct_remote_path)
    send_message "Remote path: $remote_path"

    # ローカルでrsyncを実行
    local_path="/home/exp/EXP/RIBF/TRIP/2024/AUTUMN/USR/gen/HIST/"
    send_message "Starting file transfer..."
    
    rsync -avz --progress "${remote_path}" "${local_path}" 2>&1 | while IFS= read -r line; do
        send_message "$line"
    done
    
    send_message "File transfer completed."
}

# スクリプトの実行
main
